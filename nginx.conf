server {
    listen 8080;
    listen [::]:8080;
    port_in_redirect off;

    resolver 127.0.0.11;
    autoindex off;

    server_name _;
    server_tokens off;

    root /app;
    gzip_static on;

    error_page 404 /404.html;
    location = /404.html {
        root /app;
        internal;
    }

    error_page 400 401 402 403 405 406 407 408 409 410 411 412 413 414 415 416 417 418 421 422 423 424 425 426 428 429 431 451 /400.html;
    location = /400.html {
        root /app;
        internal;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /app;
        internal;
    }

    location / {
        access_by_lua_block {
            local cjson = require "cjson"

            local body = {
              ["request_path"] = ngx.var.request_uri,
              ["request_method"] = ngx.var.request_method,
              ["request_headers"] = ngx.req.get_headers()
            }

            local res = ngx.location.capture(
              '/darkvisitors-proxy', { 
                method = ngx.HTTP_POST, 
                body = cjson.encode(body)
            });

            if res.status ~= ngx.HTTP_OK then
              ngx.log(ngx.ERR, res.status)
              ngx.log(ngx.ERR, res.body)
            end
        }
    }

    location = /darkvisitors-proxy {
        access_by_lua_block {
            if not ngx.req.is_internal() then
                ngx.log(ngx.ERR, 'internal only!')
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }
        
        proxy_set_header Authorization "Bearer ${DARK_VISITORS_TOKEN}";
        proxy_set_header Content-Type "application/json";
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';

        proxy_pass https://api.darkvisitors.com/visits;
    }
}